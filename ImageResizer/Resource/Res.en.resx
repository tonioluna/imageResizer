<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="dialog_currImgLabel_canceled" xml:space="preserve">
    <value>Operation was canceled</value>
  </data>
  <data name="gui_dialog_startButton_cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="gui_dialog_startButton_cancelling" xml:space="preserve">
    <value>Cancelling</value>
  </data>
  <data name="gui_dialog_startButton_start" xml:space="preserve">
    <value>Start</value>
  </data>
  <data name="dialog_worker_params_retr_err" xml:space="preserve">
    <value>Unable to retrieve conversion parameters. Some parameter could be incorrect. Please check your inputs.</value>
  </data>
  <data name="gui_aboutToolStripMenuItem" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="gui_exitToolStripMenuItem" xml:space="preserve">
    <value>Exit</value>
  </data>
  <data name="gui_fileToolStripMenuItem" xml:space="preserve">
    <value>File</value>
  </data>
  <data name="gui_heigthLabel" xml:space="preserve">
    <value>Height</value>
  </data>
  <data name="gui_inputFolderGroupBox" xml:space="preserve">
    <value>Input Folder</value>
  </data>
  <data name="gui_languajeToolStripMenuItem" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="gui_methodLabel" xml:space="preserve">
    <value>Method</value>
  </data>
  <data name="gui_outFolAutoSelCB" xml:space="preserve">
    <value>Automatic Selection</value>
  </data>
  <data name="gui_outputFolderGroupBox" xml:space="preserve">
    <value>Output Folder</value>
  </data>
  <data name="gui_outputParamsBox" xml:space="preserve">
    <value>Output Parameters</value>
  </data>
  <data name="gui_profileLabel" xml:space="preserve">
    <value>Profile</value>
  </data>
  <data name="gui_resizeInfoWindow" xml:space="preserve">
    <value>Resize Methods Information</value>
  </data>
  <data name="gui_resizeMethodsHelpToolStripMenuItem" xml:space="preserve">
    <value>Resize Methods Help</value>
  </data>
  <data name="gui_showLoggerToolStripMenuItem" xml:space="preserve">
    <value>Show Logger</value>
  </data>
  <data name="gui_toolsToolStripMenuItem" xml:space="preserve">
    <value>Tools</value>
  </data>
  <data name="gui_widthLabel" xml:space="preserve">
    <value>Width</value>
  </data>
  <data name="method_desc_add_fill" xml:space="preserve">
    <value>Resize image to fit on box keeping aspect ratio. Add filling margins to make up required size. Output image will always be the target dimensions.</value>
  </data>
  <data name="method_desc_cut_excess" xml:space="preserve">
    <value>Resize image keeping aspect ratio until if fully covers the output box. Excess on one of its dimensions will be trimmed. Output image will be the target dimensions unless one of the image's dimensions is smaller than target.</value>
  </data>
  <data name="method_desc_fit_on_box" xml:space="preserve">
    <value>Resize image to fit box keeping aspect ratio. Output image will be equal or smaller to target dimensions.</value>
  </data>
  <data name="method_desc_stretch_to_box" xml:space="preserve">
    <value>Resize down image to fit box. Resize operation will independently reduce both dimensions to match target size. If source image is larger it won't be be grown. Output image will always be equal or smaller than target dimensions.</value>
  </data>
  <data name="method_short_add_fill" xml:space="preserve">
    <value>Add Fill Margins</value>
  </data>
  <data name="method_short_cut_excess" xml:space="preserve">
    <value>Cut Excess</value>
  </data>
  <data name="method_short_fit_on_box" xml:space="preserve">
    <value>Fit on Box</value>
  </data>
  <data name="method_short_stretch_to_box" xml:space="preserve">
    <value>Stretch to Box</value>
  </data>
  <data name="dialog_about_date_prefix" xml:space="preserve">
    <value>Compiled on</value>
  </data>
  <data name="dialog_about_date_string_format" xml:space="preserve">
    <value>MM/dd/yyyy HH:mm:ss</value>
  </data>
  <data name="dialog_about_publisher_prefix" xml:space="preserve">
    <value>By</value>
  </data>
  <data name="dialog_about_version_prefix" xml:space="preserve">
    <value>v</value>
  </data>
  <data name="dialog_auto_output_folder_input_err" xml:space="preserve">
    <value>Input error doesn't exist!</value>
  </data>
  <data name="dialog_default_output_exists" xml:space="preserve">
    <value>Defualt folder exists. An index was added.</value>
  </data>
  <data name="dialog_default_output_folder" xml:space="preserve">
    <value>Processed Images</value>
  </data>
  <data name="dialog_default_output_folder_with_index" xml:space="preserve">
    <value>Processed Images {0}</value>
  </data>
  <data name="dialog_release_notes_missing" xml:space="preserve">
    <value>Unable to locate release notes file</value>
  </data>
  <data name="dialog_release_notes_missing_caption" xml:space="preserve">
    <value>Release Notes Missing</value>
  </data>
  <data name="gui_helpToolStripMenuItem" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="gui_releaseNotesToolStripMenuItem" xml:space="preserve">
    <value>Release Notes</value>
  </data>
  <data name="gui_releaseNotesWindow" xml:space="preserve">
    <value>Release Notes</value>
  </data>
</root>